<!DOCTYPE html>
<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
</head>

<body>
  <canvas id="canvas" title="click and drag to add rectangles" style="border:1px solid #000000;cursor:crosshair"
    width="800" height="500"></canvas>
  <input id="inputFile" type="file" multiple>
  <button id="Rect">getRect</button>
  <script src='dft.js'></script>
  <script src='ReCF.js'></script>
  <script type="text/javascript">
    "use strict";
    const cnv = document.getElementById('canvas')
    const ctx = document.getElementById('canvas').getContext('2d');
    let isInitialized = false;
    let imageSeqNumber = 0;
    let files = []

    function newImageCallback(image, width, height) {
      console.log("--------------");
    }

    function handleFileSelect(e) {
      files = e.target.files;
      console.log(files)
      loadImg(...files)
        .then((img) => timeout(img))
        .catch(err => console.error(err));
    }
    const loadImg = (...paths) => Promise.all(paths.map(loadImage));

    function loadImage(src) {
      return new Promise((resolve, reject) => {
        console.log(src)
        const img = new Image();
        img.addEventListener("load", () => resolve(img));
        img.addEventListener("error", err => reject(err));
        img.src = URL.createObjectURL(src);
      });
    };
    const filter = new ReCF()
    let init = false
    async function timeout(img) {
      for (let i = 0; i < img.length; i++) {
        setTimeout(function () {
          cnv.height = img[i].height
          cnv.width = img[i].width
          ctx.drawImage(img[i], 0, 0, img[i].width, img[i].height);
          console.time("All")
          const image = ctx.getImageData(0, 0, img[i].width, img[i].height)
          if (!init) {
            const r = { x: 623, y: 299, w: 11, h: 38 }
            const imgResize = ctx.getImageData(r.x,r.y,r.w,r.h) 
            ctx.putImageData(imgResize, 0, 0);
            filter.initialize(image, r)
            init = true
          } else filter.updateImpl(image)
          console.timeEnd("All")
          ctx.strokeRect(filter.target.x, filter.target.y, filter.target.w, filter.target.h)
        }, i, i)
      }
    }
    document.getElementById("inputFile").addEventListener("change", handleFileSelect)
  </script>
  </div>
</body>

</html>